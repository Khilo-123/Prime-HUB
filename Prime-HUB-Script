local Players = game:GetService("Players")
local player = Players.LocalPlayer

local plr = Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local root = char:WaitForChild("HumanoidRootPart")
local Hum = char:WaitForChild("Humanoid")

local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local MarketplaceService = game:GetService("MarketplaceService")

local Settings = {
	Prefix = "!";
	ScriptStats = true;
	GamePassId = 1013101062; -- Replace with your game pass ID
	WhitelistedUsers = {
		5468759072; -- Replace with player IDs you want to whitelist
	};
}

local flying = false
local noclipping = false
local targeting = false

local function sendNotification(title, text, duration)
	StarterGui:SetCore("SendNotification", {
		Title = title;
		Text = text;
		Duration = duration;
	})
end

local function isWhitelisted(player)
	for _, id in ipairs(Settings.WhitelistedUsers) do
		if player.UserId == id then
			return true
		end
	end
	return false
end

local function hasGamePass(player, gamePassId)
	local success, hasPass = pcall(function()
		return MarketplaceService:UserOwnsGamePassAsync(player.UserId, gamePassId)
	end)
	return success and hasPass
end

local function isPlayerAllowed(player)
	return isWhitelisted(player) or hasGamePass(player, Settings.GamePassId)
end

local function findPlayerByPartialName(partialName)
	for _, p in ipairs(Players:GetPlayers()) do
		if p.Name:lower():find(partialName:lower()) or p.DisplayName:lower():find(partialName:lower()) then
			return p
		end
	end
	return nil
end

local function findNearestPlayer()
	local nearestPlayer = nil
	local shortestDistance = math.huge
	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
			local distance = (root.Position - p.Character.HumanoidRootPart.Position).magnitude
			if distance < shortestDistance then
				shortestDistance = distance
				nearestPlayer = p
			end
		end
	end
	return nearestPlayer
end

local function findFarthestPlayer()
	local farthestPlayer = nil
	local longestDistance = 0
	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
			local distance = (root.Position - p.Character.HumanoidRootPart.Position).magnitude
			if distance > longestDistance then
				longestDistance = distance
				farthestPlayer = p
			end
		end
	end
	return farthestPlayer
end

local function findRandomPlayer()
	local potentialPlayers = {}
	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
			table.insert(potentialPlayers, p)
		end
	end
	if #potentialPlayers > 0 then
		return potentialPlayers[math.random(1, #potentialPlayers)]
	else
		return nil
	end
end

local function fly(speed)
	local BodyVelocity = Instance.new("BodyVelocity")
	local BodyGyro = Instance.new("BodyGyro")

	BodyVelocity.Velocity = Vector3.new(0, 0, 0)
	BodyVelocity.MaxForce = Vector3.new(1, 1, 1) * math.huge
	BodyVelocity.P = 1000

	BodyGyro.CFrame = root.CFrame
	BodyGyro.MaxTorque = Vector3.new(1, 1, 1) * math.huge
	BodyGyro.P = 3000

	BodyVelocity.Parent = root
	BodyGyro.Parent = root

	flying = true

	local function moveFly()
		local direction = Vector3.new()

		if UserInputService:IsKeyDown(Enum.KeyCode.W) then
			direction = direction + workspace.CurrentCamera.CFrame.LookVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.S) then
			direction = direction - workspace.CurrentCamera.CFrame.LookVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.A) then
			direction = direction - workspace.CurrentCamera.CFrame.RightVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.D) then
			direction = direction + workspace.CurrentCamera.CFrame.RightVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
			direction = direction + workspace.CurrentCamera.CFrame.UpVector
		end
		if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
			direction = direction - workspace.CurrentCamera.CFrame.UpVector
		end

		BodyVelocity.Velocity = direction * speed
		BodyGyro.CFrame = workspace.CurrentCamera.CFrame
	end

	while flying do
		moveFly()
		RunService.Stepped:Wait()
	end

	BodyVelocity:Destroy()
	BodyGyro:Destroy()
end

local function unfly()
	flying = false
end

local function noclip()
	noclipping = true
	RunService.Stepped:Connect(function()
		if noclipping then
			for _, v in pairs(char:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		end
	end)
end

local function unnoclip()
	noclipping = false
	for _, v in pairs(char:GetDescendants()) do
		if v:IsA("BasePart") then
			v.CanCollide = true
		end
	end
end

local function ChangePrefix(ReqPrefix)
	wait()
	Settings.Prefix = ReqPrefix
end

local function CommandExecute(CMD, arg)
	if not isPlayerAllowed(player) then
		sendNotification("Access Denied", "You are not whitelisted or do not own the required game pass.", 5)
		return
	end

	if CMD == "Help" then
		sendNotification("Command Submitted!", "Press F9 to see the help menu!")
		local HelpMenu = [[
        COMMANDS:
        !Help -- Shows the help menu.
        !Shutdown -- Close the script.
        !ds -- Copy our discord server
        !goto [Username or display] -- goto player
        !loopgoto [Username or display] -- loop goto
        !unloopgoto -- stops the loopgoto
        !goto nearest -- goto nearest player
        !goto farthest -- goto farthest player
        !goto random -- goto random player
        !loopgoto random -- loop goto random player
        !sit -- Sit command
        !lay -- Lay command
        !fly [speed] --fly
        !unfly -- Unfly command
        !noclip -- Noclip command
        !unnoclip -- Unnoclip command
        !print [text] -- Print the specified text
        !prefix [prefix] -- Change prefix
        !reset --die
        !rj --rejoin with same server
        !serverhop -- server hops, join same game but with diffirent server
        !logs -- print the logs, latest updates
        
        ]]
		warn(HelpMenu)
	elseif CMD == "Shutdown" then
		sendNotification("Command Submitted!", "Prime HUB | Has been disabled!", 3)
		Settings.ScriptStats = false
	elseif CMD == "Discord" then
		sendNotification("Command Submitted!", "Discord Server join link has been copied to your clipboard!", 3)
		setclipboard("https://discord.gg/bhy6dCMM")
	elseif CMD == "goto" then
		local targetPlayer
		if arg == "nearest" then
			targetPlayer = findNearestPlayer()
		elseif arg == "farthest" then
			targetPlayer = findFarthestPlayer()
		elseif arg == "random" then
			targetPlayer = findRandomPlayer()
		else
			targetPlayer = findPlayerByPartialName(arg)
		end

		if targetPlayer and targetPlayer.Character then
			local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
			if targetRoot then
				root.CFrame = targetRoot.CFrame
				sendNotification("Command Submitted!", "Teleported to " .. targetPlayer.Name, 3)
			end
		else
			sendNotification("Command Failed!", "Player not found.", 3)
		end
	elseif CMD == "loopgoto" then
		_G.LoopGoto = true
		while _G.LoopGoto do
			local targetPlayer
			if arg == "random" then
				targetPlayer = findRandomPlayer()
			else
				targetPlayer = findPlayerByPartialName(arg)
			end

			if targetPlayer and targetPlayer.Character then
				local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
				if targetRoot then
					root.CFrame = targetRoot.CFrame
				end
			else
				sendNotification("Command Failed!", "Player not found.", 3)
				_G.LoopGoto = false
			end
			wait(1)
		end
	elseif CMD == "unloopgoto" then
		_G.LoopGoto = false
		sendNotification("Command Submitted!", "Stopped loop goto.", 3)
	elseif CMD == "sit" then
		if char and Hum then
			Hum.Sit = true
			sendNotification("Command Submitted!", "Sitting down.", 3)
		end
	elseif CMD == "lay" then
		if char and Hum then
			Hum.PlatformStand = true
			sendNotification("Command Submitted!", "Laying down.", 3)
		end
	elseif CMD == "fly" then
		local speed = tonumber(arg) or 50
		fly(speed)
		sendNotification("Command Submitted!", "Flying at speed "..speed, 3)
	elseif CMD == "unfly" then
		unfly()
		sendNotification("Command Submitted!", "Stopped flying.", 3)
	elseif CMD == "noclip" then
		noclip()
		sendNotification("Command Submitted!", "Noclip enabled.", 3)
	elseif CMD == "unnoclip" then
		unnoclip()
		sendNotification("Command Submitted!", "Noclip disabled.", 3)
	elseif CMD == "print" then
		sendNotification("Command Submitted!", "Printed: " .. arg, 3)
		print(arg)
	elseif CMD == "ChangePrefix" then
		Settings.Prefix = arg
		sendNotification("Command Submitted!", "Prefix changed to: " .. arg, 3)
	elseif CMD == "Speed" then
		Settings.WalkSpeed = tonumber(arg) or 16
		sendNotification("Command Submitted!", "WalkSpeed changed to: " .. arg, 3)
	elseif CMD == "Jump" then
		Settings.JumpPower = tonumber(arg) or 50
		sendNotification("Command Submitted!", "JumpPower changed to: " .. arg, 3)
	elseif CMD == "FOV" then
		Settings.FieldOfView = tonumber(arg) or 70
		sendNotification("Command Submitted!", "Field of View changed to: " .. arg, 3)
	end
end

local function Setup()
	sendNotification("Executed!", "Prime HUB | Has been executed! Enjoy using commands by typing "..Settings.Prefix.."help | for help!", 3)
	player.Chatted:Connect(function(msg)
		if msg:sub(1, 1) == Settings.Prefix and Settings.ScriptStats == true then
			local splitMsg = msg:sub(2):split(" ")
			local command = splitMsg[1]:lower()
			local arg = splitMsg[2] and splitMsg[2]:lower() or ""
			if command == "help" then
				CommandExecute("Help")
			elseif command == "shutdown" then
				CommandExecute("Shutdown")
			elseif command == "ds" then
				CommandExecute("Discord")
			elseif command == "goto" then
				CommandExecute("goto", arg)
			elseif command == "loopgoto" then
				CommandExecute("loopgoto", arg)
			elseif command == "unloopgoto" then
				CommandExecute("unloopgoto")
			elseif command == "sit" then
				CommandExecute("sit")
			elseif command == "lay" then
				CommandExecute("lay")
			elseif command == "fly" then
				CommandExecute("fly", arg)
			elseif command == "unfly" then
				CommandExecute("unfly")
			elseif command == "noclip" then
				CommandExecute("noclip")
			elseif command == "unnoclip" then
				CommandExecute("unnoclip")
			elseif command == "print" then
				CommandExecute("print", arg)
			elseif command == "speed" then
				CommandExecute("Speed", arg)
			elseif command == "jump" then
				CommandExecute("Jump", arg)
			elseif command == "changeprefix" then
				CommandExecute("ChangePrefix", arg)
			elseif command == "fov" then
				CommandExecute("FOV", arg)
			end
		end
	end)

	UserInputService.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.Comma then
			targeting = not targeting
			if targeting then
				sendNotification("Targeting", "Click on any player to target.", 5)
			else
				sendNotification("Targeting", "Targeting mode disabled.", 3)
			end
		end
	end)

	local function onTargetingInput(input)
		if targeting and input.UserInputType == Enum.UserInputType.MouseButton1 then
			local mouse = player:GetMouse()
			local target = mouse.Target
			while target and not target.Parent:FindFirstChildOfClass("Humanoid") do
				target = target.Parent
			end
			if target and target.Parent then
				local targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
				if targetPlayer then
					game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Targeted to: " .. targetPlayer.DisplayName, "All")
				end
			end
		end
	end

	UserInputService.InputBegan:Connect(onTargetingInput)
end

local function OnExecuted()
	Setup()
end

OnExecuted()
